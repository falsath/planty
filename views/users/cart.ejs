<%- include('../userLayouts/userhead.ejs') %>

  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

  <style>
    @import url('https://fonts.googleapis.com/css?family=Open+Sans&display=swap');

    body {
      background-color: #eeeeee;
      font-family: 'Open Sans', serif;
      font-size: 14px;
    }

    .container-fluid {
      margin-top: 70px;
    }

    .card-body {
      -ms-flex: 1 1 auto;
      flex: 1 1 auto;
      padding: 1.40rem;
    }

    .img-sm {
      width: 80px;
      height: 80px;
    }

    .itemside .info {
      padding-left: 15px;
      padding-right: 7px;
    }

    .table-shopping-cart .price-wrap {
      line-height: 1.2;
    }

    .table-shopping-cart .price {
      font-weight: bold;
      margin-right: 5px;
      display: block;
    }

    .text-muted {
      color: #969696 !important;
    }

    a {
      text-decoration: none !important;
    }

    .card {
      position: relative;
      display: flex;
      flex-direction: column;
      min-width: 0;
      word-wrap: break-word;
      background-color: #fff;
      background-clip: border-box;
      border: 1px solid rgba(0, 0, 0, .125);
      border-radius: 0px;
    }

    .itemside {
      position: relative;
      display: flex;
      width: 100%;
    }

    .dlist-align {
      display: flex;
    }

    [class*="dlist-"] {
      margin-bottom: 5px;
    }

    .coupon {
      border-radius: 1px;
    }

    .price {
      font-weight: 600;
      color: #212529;
    }

    .btn.btn-out {
      outline: 1px solid #fff;
      outline-offset: -5px;
    }

    .btn-main {
      border-radius: 2px;
      text-transform: capitalize;
      font-size: 15px;
      padding: 10px 19px;
      cursor: pointer;
      color: #fff;
      width: 100%;
    }

    .btn-light {
      color: #ffffff;
      background-color: #F44336;
      border-color: #f8f9fa;
      font-size: 12px;
    }

    .btn-light:hover {
      color: #ffffff;
      background-color: #F44336;
      border-color: #F44336;
    }

    .btn-apply {
      font-size: 11px;
    }

    /* Adjusted table styles */
    .table-shopping-cart th,
    .table-shopping-cart td {
      text-align: center;
    }

    .table-shopping-cart th:last-child,
    .table-shopping-cart td:last-child {
      text-align: right;
    }

    .table-shopping-cart th:first-child,
    .table-shopping-cart td:first-child {
      text-align: left;
    }
  </style>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    integrity="new-integrity-value" crossorigin="anonymous" referrerpolicy="no-referrer" />

    <div class="mt-5 ms-5">
      <a href="/allProduct" class="btn btn-dark">BACK</a>
  </div>
  
  <div class="container-fluid">
      <div class="row">
        <% if (cartData && cartData.products && cartData.products.length > 0) { %>
          <aside class="col-lg-9">
              <div class="card">
                  <div class="table-responsive">
                     
                          <table class="table table-borderless table-shopping-cart">
                              <thead class="text-muted">
                                  <tr class="small text-uppercase">
                                      <th scope="col">Product</th>
                                      <th scope="col" width="120">Quantity</th>
                                      <th scope="col" width="120">Price</th>
                                      <th scope="col" class="text-right d-none d-md-block" width="200"></th>
                                  </tr>
                              </thead>
                              <tbody>
                                  <% for (let i = 0; i < cartData.products.length; i++) { %>
                                      <tr>
                                          <td>
                                              <figure class="itemside align-items-center">
                                                  <div class="aside">
                                                      <% if (cartData.products[i].product.image && cartData.products[i].product.image.length > 0) { %>
                                                          <img src="/public/productImage/<%= cartData.products[i].product.image[0] %>" class="img-sm">
                                                      <% } %>
                                                  </div>
                                                  <figcaption class="info">
                                                      <a href="#" class="title text-dark" data-abc="true"><%= cartData.products[i].product.name %></a>
                                                      <p class="text-muted small"><%= cartData.products[i].product.description %></p>
                                                  </figcaption>
                                              </figure>
                                          </td>
                                          <td>
                                              <div class="input-group">
                                                  <button class="btn btn-light btn-minus" type="button">-</button>
                                                  <input type="text" class="form-control quantity-input" value="<%= cartData.products[i].quantity %>" min="1" data-product-id="<%= cartData.products[i].product._id %>">
                                                  <button class="btn btn-light btn-plus" type="button">+</button>
                                              </div>
                                          </td>
                                          <td>
                                              <div class="price-wrap">
                                                  <var class="price">Rs.<%= (cartData.products[i].product.price * cartData.products[i].quantity).toFixed(2) %></var>
                                              </div>
                                          </td>
                                          <td class="text-right d-none d-md-table-cell">
                                              <div class="d                                            <div class="d-flex justify-content-end">
                                                <a data-original-title="Save to Wishlist" title="" href="/add-to-wishlist/<%= cartData.products[i].product._id %>" class="btn btn-light me-2" data-toggle="tooltip" data-abc="true">
                                                    <i class="fa fa-heart"></i>
                                                </a>
                                                <button class="btn btn-light btn-delete" data-product-id="<%= cartData.products[i].product._id %>" data-abc="true">Remove</button>
                                            </div>
                                        </td>
                                    </tr>
                                <% } %>
                            </tbody>
                        </table>
                    <% } else { %>
                        <div class="text-center p-4">
                            <h5>Your cart is empty</h5>
                        </div>
                    <% } %>
                </div>
            </div>
        </aside>

        

                <aside class="col-lg-3">
                 
                 
                 
                 
                  <div class="card mb-3">
                    <div class="card-body">
                      <form id="couponForm" method="post" action="">
                        <div class="form-group mb-3">
                          <div class="input-group">
                            <button class="btn btn-primary btn-apply coupon" id="showCouponBtn" type="button"
                              onclick="toggleCouponInput()">
                              <i class="fas fa-tags"></i> Have a coupon?
                            </button>

                            <% if (coupon) { %>
                             
                             
                              <!-- <p>Coupon applied: <%= coupon.code %> - Discount: Rs.<%= coupon.discountAmount %></p> -->

                              <select class="form-control" name="couponCode" id="couponCodeSelect">
                                <option value="">Select a coupon</option>
                                <% coupon.forEach(function(coupon) { %>
                                  <option value="<%= coupon.code %>">
                                    <%= coupon.code %> - Rs.<%= coupon.discountAmount %> off
                                  </option>
                                <% }) %>
                              </select>
                              <button class="btn btn-danger" id="clearCouponBtn" type="button" onclick="clearCoupon()">Clear Coupon</button>
                            
                            
                              <% } %>
          
                            <div id="couponInputContainer" style="display: none;" class="mt-4">
                              <div class="input-group">
                                <input type="text" class="form-control" placeholder="Enter coupon code" name="couponCode"
                                  id="couponCodeInput">
                                <button class="btn btn-success btn-apply coupon" type="button" id="applyCouponBtn"
                                  onclick="applyDiscountCode()">
                                  Apply Coupon
                                </button>
                              </div>
                            </div>
          
                          </div>
                          <small class="text-muted mt-3">* Coupon can only be applied for purchases above Rs 1000.</small>
                        </div>
                      </form>
                    </div>
          
                  </div> 
                 
                 
                 
                 
                 
                 
                 
                 
                  <% if (cartData && cartData.products && cartData.products.length > 0) { %>
                 
                 
                 
                 
                 
                 
                 
                 
                 
                    <div class="card">
                    <div class="card-body">


                      
                      
                        <dl>
                          <h3>Cart items</h3>
                        </dl>
                        <hr>
                        <% cartData.products.forEach(function(item){ %>
                          <dl class="dlist-align justify-content-between">
                            <dt class="text-left"><%= item.product.name %></dt>
                            <dd class="text-right ml-3">Rs.<%= item.product.price %></dd>
                          </dl>
                        <% }); %>
                        <hr>
                        <dl class="dlist-align">
                          <dt class="text-left">Total:</dt>
                          <dd class="text-right text-dark b ml-3">
                            <strong>Rs.<%= totalCartPrice %></strong>
                          </dd>
                          
                        </dl>
                        <hr>



                        
                        <a href="/checkout" class="btn btn-out btn-primary btn-square btn-main" data-abc="true">Proceed to Checkout</a>
                        <a href="/allProduct" class="btn btn-out btn-success btn-square btn-main mt-2" data-abc="true">Continue Shopping</a>
                      <% } else { %>
                        <!-- <p>No items in the cart.</p> -->
                      <% } %>
                    </div>
                  </div>
                </aside>


              </div>
            </div>
          
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>
            <script>



            
    function toggleCouponInput() {
      const couponInputContainer = document.getElementById('couponInputContainer');
      couponInputContainer.style.display = couponInputContainer.style.display === 'none' ? 'block' : 'none';
    }

    

async function applyDiscountCode() {
  try {
    const discountCodeInput = document.getElementById('couponCodeInput');
    const discountCode = discountCodeInput ? discountCodeInput.value.trim() : '';

    if (!discountCode) {
      Swal.fire({
        icon: 'error',
        title: 'Invalid Coupon Code',
        text: 'Please enter a valid coupon code.',
      });
      return;
    }

    const response = await fetch('/verifyCoupon', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ coupon: discountCode }),
    });

    if (response.ok) {
      const result = await response.json();
      const oldTotalElement = document.querySelector('.text-right.text-dark.b strong');
      const oldTotalAmount = oldTotalElement ? parseFloat(oldTotalElement.textContent.trim().replace('Rs.', '')) : 0;

      // Update the total price after discount
      const newTotalAmount = oldTotalAmount - result.discountAmount;
      oldTotalElement.innerText = `Rs.${newTotalAmount.toFixed(2)}`;

      // Display the applied coupon details
      Swal.fire({
        icon: 'success',
        title: 'Coupon Applied!',
        text: `Discount of Rs.${result.discountAmount} applied successfully.`,
        showCloseButton: true,
        showConfirmButton: false,
      });
    } else {
      Swal.fire({ icon: 'error', title: 'Coupon Error', text: 'Invalid coupon' });
    }
  } catch (error) {
    console.error('Error applying coupon:', error);
    Swal.fire({ icon: 'error', title: 'Error', text: 'An unexpected error occurred' });
  }
}











              document.addEventListener('DOMContentLoaded', function () {
                const quantityInputs = document.querySelectorAll('.input-group input');
            
                if (quantityInputs.length === 0) {
                  console.error('No quantity input elements found.');
                  return;
                }
            
                quantityInputs.forEach(function (input) {
                  const minusBtn = input.parentElement.querySelector('.btn-minus');
                  const plusBtn = input.parentElement.querySelector('.btn-plus');
            
                  if (!minusBtn || !plusBtn) {
                    console.error('Minus or plus button not found for quantity input.');
                    return;
                  }
            
                  minusBtn.addEventListener('click', function () {
                    let value = parseInt(input.value);
                    if (value > 1) {
                      input.value = value - 1;
                      updateQuantity(input);
                    }
                  });
            
                  plusBtn.addEventListener('click', function () {
                    let value = parseInt(input.value);
                    input.value = value + 1;
                    updateQuantity(input);
                  });
                });
            
                const deleteButtons = document.querySelectorAll('.btn-delete');
            
                deleteButtons.forEach(function (button) {
                  button.addEventListener('click', function () {
                    const productId = button.dataset.productId;
            
                    fetch(`/deleteItem/${productId}`, {
                      method: 'POST'
                    })
                      .then(response => response.json())
                      .then(data => {
                        if (data.success) {
                          console.log('Item deleted successfully');
                          window.location.reload(); // Reload the page after deletion
                        } else {
                          console.error('Failed to delete item:', data.message);
                        }
                      })
                      .catch(error => {
                        console.error('Error:', error);
                      });
                  });
                });
            
                function updateQuantity(input) {
                  const productId = input.dataset.productId;
                  let newQuantity = parseInt(input.value);
            
                  if (isNaN(newQuantity) || newQuantity < 1) {
                    newQuantity = 1;
                    input.value = newQuantity;
                  }
            
                  fetch('/updateQuantity', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                      productId,
                      newQuantity,
                    })
                  })
                    .then(response => response.json())
                    .then(data => {
                      if (data.success) {
                        console.log('Quantity updated successfully');
                        window.location.reload(); // Reload the page after quantity update
                      } else {
                        console.error('Failed to update quantity:', data.message);
                      }
                    })
                    .catch(error => {
                      console.error('Error:', error);
                    });
                }
              });




              async function clearCoupon() {
  try {
    const response = await fetch('/clearCoupon', { method: 'POST' });

    if (response.ok) {
      const result = await response.json();

      // Update the UI to remove the coupon details
      const couponInfo = document.querySelector('#couponInfo');
      if (couponInfo) {
        couponInfo.remove(); // Remove the coupon display
      }

      // Update the total price after clearing the coupon
      const totalElement = document.querySelector('.text-right.text-dark.b strong');
      const totalAmount = result.newTotal; // Assuming the server returns the new total after clearing
      totalElement.innerText = `Rs.${totalAmount.toFixed(2)}`;

      // Show success message
      Swal.fire({
        icon: 'success',
        title: 'Coupon Cleared!',
        text: 'The coupon has been successfully removed.',
        showCloseButton: true,
        showConfirmButton: false,
      });
    } else {
      Swal.fire({ icon: 'error', title: 'Error', text: 'Failed to clear the coupon' });
    }
  } catch (error) {
    console.error('Error clearing coupon:', error);
    Swal.fire({ icon: 'error', title: 'Error', text: 'An unexpected error occurred' });
  }
}




            </script>
            
          
         
          
            <%- include('../userLayouts/userFoot.ejs') %>
          
          

  